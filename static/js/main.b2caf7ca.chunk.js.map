{"version":3,"sources":["components/Components.module.css","components/api.js","components/Modal/Modal.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/ImageErrorView/ImageErrorView.js","components/SearchBar/SearchBar.js","components/Button/Button.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","api","fetchImg","query","page","apiKey","axios","get","then","res","data","hits","modalRoot","document","querySelector","Modal","src","alt","onClose","useEffect","window","addEventListener","handleKeyDown","removeEventListener","e","code","createPortal","className","s","Overlay","onClick","currentTarget","target","ImageGalleryItem","largeImageURL","id","useState","showModal","setShowModal","toggleModal","ImageGalleryItemImage","ImageGallery","images","onImageClick","map","webformatURL","tags","getLargeImageURL","ImageErrorView","message","role","SearchBar","onSubmit","setQuery","Searchbar","preventDefault","trim","toast","SearchForm","type","SearchFormButton","SearchFormButtonLabel","value","onChange","toLowerCase","SearchFormInput","autoComplete","autoFocus","placeholder","Button","buttonDiv","Status","App","image","setImage","setPage","error","setError","status","setStatus","prevState","catch","finally","newQuery","autoClose","color","height","width","timeout","length","scroll","scrollToBottom","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b2caf7ca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"Components_App__1i73I\",\"Searchbar\":\"Components_Searchbar__3wwfW\",\"SearchForm\":\"Components_SearchForm__2n-IZ\",\"SearchFormButton\":\"Components_SearchFormButton__2YiBK\",\"SearchFormButtonLabel\":\"Components_SearchFormButtonLabel__i1Tmu\",\"SearchFormInput\":\"Components_SearchFormInput__ekd1G\",\"ImageGallery\":\"Components_ImageGallery__3v_Om\",\"ImageGalleryItem\":\"Components_ImageGalleryItem__1448F\",\"ImageGalleryItemImage\":\"Components_ImageGalleryItemImage__2Ims1\",\"Overlay\":\"Components_Overlay__12oCI\",\"Modal\":\"Components_Modal__uzopx\",\"buttonDiv\":\"Components_buttonDiv__2Afvu\",\"Button\":\"Components_Button__RNHJR\"};","import axios from 'axios';\n\nconst fetchImg = (query = '', page = 1) => {\n  const apiKey = '19054641-bf36a8a09cd65ed4eb613a5e0';\n  return axios\n    .get(\n      `https://pixabay.com/api/?q=${query}&page=${page}&key=${apiKey}&image_type=photo&orientation=horizontal&per_page=12\n`,\n    )\n    .then(res => res.data.hits);\n};\n\nconst api = { fetchImg };\nexport default api;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport s from '../Components.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({src, alt, onClose}) {\n    useEffect(() => {\n        window.addEventListener('keydown', handleKeyDown);\n        return () => {\n            window.removeEventListener('keydown', handleKeyDown);\n        };\n    });\n\n const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n    return createPortal(\n      <div className={s.Overlay} onClick={handleBackdropClick}>\n        <div className={s.Modal}>\n          <img src={src} alt={alt} />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n\nModal.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    src: PropTypes.string.isRequired,\n    alt: PropTypes.string.isRequired,\n  }\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport s from '../Components.module.css';\nimport Modal from '../Modal/Modal';\n\nexport default function ImageGalleryItem({src, alt, id, largeImageURL}) {\n    const [showModal, setShowModal] = useState(false);\n\n  const toggleModal = () => {\n      setShowModal(!showModal);\n  };\n\n    return (\n      <li className={s.ImageGalleryItem}>\n        <img\n          onClick={toggleModal}\n          className={s.ImageGalleryItemImage}\n          src={src}\n          alt={alt}\n        />\n        {showModal && (\n          <Modal onClose={toggleModal} src={largeImageURL} alt={alt} />\n        )}\n      </li>\n    );\n  }\n\nImageGalleryItem.propTypes = {\n    src: PropTypes.string.isRequired,\n    alt: PropTypes.string.isRequired,\n    largeImageURL: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport s from '../Components.module.css';\n\nfunction ImageGallery({ images, onImageClick }) {\n  return (\n    <ul className={s.ImageGallery}>\n      {images.map(({webformatURL, tags, largeImageURL, id}) => (\n        <ImageGalleryItem\n          key={id}\n          src={webformatURL}\n          largeImageURL={largeImageURL}\n          // id={id}\n          alt={tags}\n          getLargeImageURL={onImageClick}\n        />\n      ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.array.isRequired,\n};\n\nexport default ImageGallery;\n","import PropTypes from 'prop-types';\n\nexport default function ImageErrorView({ message }) {\n    return (\n        <div role=\"alert\">\n            <p>Something wrong:( Error: {message}</p>\n        </div>\n    );\n}\n\nImageErrorView.propTypes = {\n    message: PropTypes.string.isRequired,\n};","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport PropTypes from 'prop-types';\n\nimport s from '../Components.module.css';\n\nexport default function SearchBar({ onSubmit }) {\n    const [query, setQuery] = useState('');\n\n    const handleChange = e => {\n        setQuery(e.currentTarget.value.toLowerCase());\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        if (query.trim() === '') {\n            toast('Please enter your query');\n            return\n        }\n        onSubmit(query);\n        setQuery('');\n    };\n\n    return (\n        <header className={s.Searchbar}>\n            <form onSubmit={handleSubmit} className={s.SearchForm}>\n                <button type=\"submit\" className={s.SearchFormButton}>\n                    <span className={s.SearchFormButtonLabel}>Search</span>\n                </button>\n                <input\n                    type=\"text\"\n                    value={query}\n                    onChange={handleChange}\n                    className={s.SearchFormInput}\n                    autoComplete=\"off\"\n                    autoFocus\n                    placeholder=\"Search images and photos\"\n                />\n            </form>\n        </header>\n    );\n}\n\nSearchBar.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from '../Components.module.css';\n\nexport default function Button({onClick}) {\n    return (\n        <div className={s.buttonDiv}>\n            <button type=\"button\" onClick={onClick} className={s.Button}>\n                Load more\n        </button>\n        </div>\n    );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};","import { useState, useEffect } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport api from './components/api';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport ImageErrorView from './components/ImageErrorView/ImageErrorView';\nimport SearchBar from './components/SearchBar/SearchBar';\nimport Button from './components/Button/Button';\nimport Loader from 'react-loader-spinner';\nimport { animateScroll as scroll } from 'react-scroll';\n\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport default function App() {\n  const [image, setImage] = useState([]);\n  const [page, setPage] = useState(1);\n  const [query, setQuery] = useState('');\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n\n  const handleFormSubmit = newQuery => {\n    if (newQuery === query) {\n      return;\n    }\n    setQuery(newQuery);\n    setPage(1);\n    setImage([]);\n  };\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    const fetchImages = () => {\n      setStatus(Status.PENDING);\n\n      api\n        .fetchImg(query, page)\n        .then(image => setImage(prevState => [...prevState, ...image]))\n        .catch(error => {\n          setError(error);\n          setStatus(Status.REJECTED);\n        })\n        .finally(() => setStatus(Status.RESOLVED));\n    };\n\n    fetchImages();\n  }, [query, page]);\n\n  const onLoadMore = () => {\n    setPage(prevState => prevState + 1);\n    scroll.scrollToBottom();\n\n  };\n  return (\n    <>\n      <div>\n        <SearchBar onSubmit={handleFormSubmit} />\n        <ToastContainer autoClose={3000} />\n\n        {status === Status.IDLE && (\n          <p className=\"searchString\">What are you searching?</p>\n        )}\n\n        {status === Status.PENDING && (\n          <span className=\"loader\">\n            <Loader\n              type=\"TailSpin\"\n              color=\"#00BFFF\"\n              height={80}\n              width={80}\n              timeout={3000} //3 secs\n            />\n          </span>\n        )}\n\n        {status === Status.REJECTED && (\n          <ImageErrorView message={error.message} />\n        )}\n        {image.length > 0 && <ImageGallery images={image} />}\n          \n        {status === Status.RESOLVED && <Button onClick={onLoadMore} />}\n\n      </div>\n    </>\n  );\n}\n\n\n  ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}